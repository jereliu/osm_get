coord <- read.csv(paste0(file_dir, file_name))
file_dir <- "/Users/Jeremiah/Dropbox/Research/Harvard/1. BostonPol/Analysis/Elem/2/data/"
file_name <- "dStudy.csv"
coord <- read.csv(paste0(file_dir, file_name))
head(coord)
?extract
require(magrittr)
require(dplyr)
require(magrittr)
head(coord)
names(coord)
coord <-
read.csv(paste0(file_dir, file_name)) %>%
extract(c("SiteID", "Longitude", "Latitude"))
dat <- coord %>% set_names(c("name", "long", "lat"))
head(dat)
dat <- coord %>% unique %>%
set_names(c("name", "long", "lat"))
nrow(dat)
head(dat)
sapply(dat[, -1], is.numeric)
all(sapply(dat[, -1], is.numeric))
any(sapply(dat[, -1], is.numeric))
stop("'Longitude' or 'Latitude' not numeric")
stop("osm_get: 'Longitude' or 'Latitude' not numeric")
cat("osm_get: data read in with ", nrow(dat),
"unique locations")
cat("osm_get: data read in with", nrow(dat),
"unique locations")
source('~/GitHub/osm_get/Script/osm_download.R')
if any(sapply(dat[, -1], is.numeric)):
if (any(sapply(dat[, -1], is.numeric)))
stop("'Longitude' or 'Latitude' not numeric")
any(sapply(dat[, -1], is.numeric))
if (!any(sapply(dat[, -1], is.numeric)))
stop("'Longitude' or 'Latitude' not numeric")
if (any(sapply(dat[, -1], is.numeric)) != TRUE)
stop("'Longitude' or 'Latitude' not numeric")
Sys.sleep
?Sys.sleep
ifelse
paste("http://api.openstreetmap.org/api/0.6/map?bbox=",
left, bottom, right, top, sep = ",")
left = 11.54
bottom = 48.14
right = 11.543
top = 48.145
paste("http://api.openstreetmap.org/api/0.6/map?bbox=",
left, bottom, right, top, sep = ",")
?sprintf
sprintf("http://api.openstreetmap.org/api/0.6/map?bbox=%f,%f,%f,%f",
left, bottom, right, top)
sprintf("http://api.openstreetmap.org/api/0.6/map?bbox=%s,%s,%s,%s",
left, bottom, right, top)
url <-
sprintf("http://api.openstreetmap.org/api/0.6/map?bbox=%s,%s,%s,%s",
left, bottom, right, top)
url
sprintf(
"http://overpass.osm.rambler.ru/cgi/xapi_meta?*[bbox=%s,%s,%s,%s]",
left, bottom, right, top)
source("./func/osm_helper.R")
api_gen(left, bottom, right, top, xapi = xapi)
xapi = TRUE
api_gen(left, bottom, right, top, xapi = xapi)
?download.file
source("./func/osm_helper.R")
a_gen
api_gen
i = 1
name <- dat[i, "name"]
long <- dat[i, "long"]; lat <- dat[i, "lat"]
name
long
lat
dat <- coord %>% unique %>% set_names(c("name", "long", "lat"))
dat$name <- as.character(dat$name)
# check if long & lat both numeric
if (!any(sapply(dat[, -1], is.numeric)))
stop("'Longitude' or 'Latitude' not numeric")
cat("osm_get: data read in with", nrow(dat), "unique locations")
name <- dat[i, "name"]
long <- dat[i, "long"]; lat <- dat[i, "lat"]
name
long
lat
bbox <-
c(left = long - radius,
right = long + radius,
bottom = lat - radius,
top = lat + radius)
long
lat
coord_dist <-
function (lon, lat, bearing, distance)
{
rad <- pi/180
a1 <- lat * rad
a2 <- lon * rad
tc <- bearing * rad
d <- distance/6378.145
nlat <- asin(sin(a1) * cos(d) + cos(a1) * sin(d) * cos(tc))
dlon <- atan2(sin(tc) * sin(d) * cos(a1), cos(d) - sin(a1) *
sin(nlat))
nlon <- ((a2 + dlon + pi)%%(2 * pi)) - pi
npts <- cbind(nlon/rad, nlat/rad)
return(npts)
}
coord_dist(long, last, 0, 1)
coord_dist(long, lat, 0, 1)
c(long, lat)
coord_dist(long, lat, 90, 1)
coord_dist(long, lat, 180, 1)
coord_dist(long, lat, 270, 1)
c(top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
radius = 1
c(top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
bbox <-
c(top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
url <- api_gen(bbox, xapi = xapi)
bbox$long
bbox <-
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
url <- api_gen(bbox, xapi = xapi)
bbox <-
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
bbox
url <- api_gen(bbox, xapi = xapi)
url
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>% round(2)
url <- api_gen(bbox, xapi = xapi)
url
bbox <-
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% as.character
url <- api_gen(bbox, xapi = xapi)
c(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% as.character %>%
# transform into dara.frame for easy reference
data.frame
c(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
)
c(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% as.character
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% apply(2, as.character)
bbox <-
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% apply(2, as.character)
url <- api_gen(bbox, xapi = xapi)
bbox
class(bbox)
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% apply(2, as.character) %>%
as.data.frame
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% apply(2, as.character) %>%
data.frame
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% lapply(2, as.character)
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% lapply(as.character)
bbox$left
bbox <-
data.frame(
top = coord_dist(long, lat, 0, radius)[2],
right = coord_dist(long, lat, 90, radius)[1],
bottom = coord_dist(long, lat, 180, radius)[2],
left = coord_dist(long, lat, 270, radius)[1]
) %>%
# force to 2 decimal place
round(2) %>% lapply(as.character)
bbox$left
url <- api_gen(bbox, xapi = xapi)
url
file_name <- sprintf("%s_%s.osm", name, radius)
file_name
file_name <- sprintf("%s_%skm.osm", name, radius)
file_name
download.file(url = url,
destfile = paste0(out_dir, file_name))
out_dir = "./Data/"
download.file(url = url,
destfile = paste0(out_dir, file_name))
cat("osm_get: download complete! check", out_dir, "for output files :)")
cat("osm_get: download complete! check\"", out_dir,
"\"for output files :)")
cat(file_name, "downloaded!")
cat("osm_get: ", file_name, "downloaded!")
cat("osm_get: be warned!!!! This will take at least",
round(pause*nrow(dat)/60, 1), "minutes")
pause = 10
cat("osm_get: be warned!!!! This will take at least",
round(pause*nrow(dat)/60, 1), "minutes")
source("./func/osm_helper.R")
require(dplyr)
require(magrittr)
osm_get(coord, radius = 0.5, out_dir = "./Data/",
xapi = TRUE, pause = 10)
source("./func/osm_helper.R")
require(dplyr)
require(magrittr)
osm_get(coord, radius = 0.5, out_dir = "./Data/",
xapi = TRUE, pause = 10)
cat("osm_get: downloading", file_name, "...")
source("./func/osm_helper.R")
require(dplyr)
require(magrittr)
#### 1. obtain monitor coordinates ####
file_dir <- "/Users/Jeremiah/Dropbox/Research/Harvard/1. BostonPol/Analysis/Elem/2/data/"
file_name <- "dStudy.csv"
coord <-
read.csv(paste0(file_dir, file_name)) %>%
extract(c("SiteID", "Longitude", "Latitude"))
source("./func/osm_helper.R")
require(dplyr)
require(magrittr)
osm_get(coord, radius = 0.5, out_dir = "./Data/",
xapi = TRUE, pause = 10)
coord
coord <-
read.csv(paste0(file_dir, file_name)) %>%
extract(c("SiteID", "Longitude", "Latitude")) %>%
unique
dim(coord)
osm_get(coord, radius = 0.5, out_dir = "./Data/",
xapi = TRUE, pause = 10)
osm_get(coord, radius = 0.5, out_dir = "./Data/",
xapi = TRUE, pause = 10)
source("./func/osm_helper.R")
require(dplyr)
require(magrittr)
file_dir <- "/Users/Jeremiah/Dropbox/Research/Harvard/1. BostonPol/Analysis/Elem/2/data/"
file_name <- "dStudy.csv"
coord <-
read.csv(paste0(file_dir, file_name)) %>%
extract(c("SiteID", "Longitude", "Latitude")) %>%
unique
?coord
names(coord)
coord$SiteID == "MNI=029"
coord$SiteID == "MNI-029"
coord[coord$SiteID == "MNI-029",]
require(rgl)
install.packages("rgl")
require(rgl)
readOBJ
list.files("../../")
list.files("../")
list.files("./")
list.files("./Data_3d")
list.files("./Data_3d")
list.file("./Data_3d/")
list.files("./Data_3d/")
list.files("./Data_3d/") %>% grep("*.obj", .)
grep("*.obj", ., value = TRUE)
list.files("./Data_3d/") %>%
grep("*.obj", ., value = TRUE)
list.files("./Data_3d/") %>%
grep("*.obj$", ., value = TRUE)
file_list <-
list.files("./Data_3d/") %>%
grep("*.obj$", ., value = TRUE)
list.files("./Data_3d/") %>%
grep("*.obj$", ., value = TRUE) %>%
paste0("./Data_3d/", .)
file_list <-
list.files("./Data_3d/") %>%
grep("*.obj$", ., value = TRUE) %>%
paste0("./Data_3d/", .)
readOBJ(file_list[1])
obj <- readOBJ(file_list[1])
open3d()
shade3d(obj, col="gray")
str(obj)
class(obj)
?mesh3d
?shape3d
